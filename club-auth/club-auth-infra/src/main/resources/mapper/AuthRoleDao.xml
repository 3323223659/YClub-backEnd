<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.club.auth.infra.basic.mapper.AuthRoleDao">

    <resultMap type="com.club.auth.infra.basic.entity.AuthRole" id="AuthRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleKey" column="role_key" jdbcType="VARCHAR"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 查询单个 -->
    <select id="queryById" resultMap="AuthRoleMap">
        SELECT
            id, role_name, role_key, created_by, created_time,
            update_by, update_time, is_deleted
        FROM auth_role
        WHERE id = #{id}
    </select>

    <!-- 查询指定行数据 -->
    <select id="queryAllByLimit" resultMap="AuthRoleMap">
        SELECT
        id, role_name, role_key, created_by, created_time,
        update_by, update_time, is_deleted
        FROM auth_role
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_name = #{roleName}
            </if>
            <if test="roleKey != null and roleKey != ''">
                AND role_key = #{roleKey}
            </if>
            <if test="createdBy != null and createdBy != ''">
                AND created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                AND created_time = #{createdTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                AND update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime}
            </if>
            <if test="isDeleted != null">
                AND is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!-- 统计总行数 -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM auth_role
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_name = #{roleName}
            </if>
            <if test="roleKey != null and roleKey != ''">
                AND role_key = #{roleKey}
            </if>
            <if test="createdBy != null and createdBy != ''">
                AND created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                AND created_time = #{createdTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                AND update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime}
            </if>
            <if test="isDeleted != null">
                AND is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!-- 新增所有列 -->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO auth_role(
            role_name, role_key, created_by,
            created_time, update_by, update_time, is_deleted
        ) VALUES (
                     #{roleName}, #{roleKey}, #{createdBy},
                     #{createdTime}, #{updateBy}, #{updateTime}, #{isDeleted}
                 )
    </insert>

    <!-- 批量新增 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO auth_role(
        role_name, role_key, created_by,
        created_time, update_by, update_time, is_deleted
        ) VALUES
        <foreach collection="entities" item="entity" separator=",">
            (
            #{entity.roleName}, #{entity.roleKey}, #{entity.createdBy},
            #{entity.createdTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.isDeleted}
            )
        </foreach>
    </insert>

    <!-- 批量插入或更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO auth_role(
        role_name, role_key, created_by,
        created_time, update_by, update_time, is_deleted
        ) VALUES
        <foreach collection="entities" item="entity" separator=",">
            (
            #{entity.roleName}, #{entity.roleKey}, #{entity.createdBy},
            #{entity.createdTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.isDeleted}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        role_name = VALUES(role_name),
        role_key = VALUES(role_key),
        created_by = VALUES(created_by),
        created_time = VALUES(created_time),
        update_by = VALUES(update_by),
        update_time = VALUES(update_time),
        is_deleted = VALUES(is_deleted)
    </insert>

    <!-- 通过主键修改数据 -->
    <update id="update">
        UPDATE auth_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleKey != null and roleKey != ''">
                role_key = #{roleKey},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 通过主键删除 -->
    <delete id="deleteById">
        DELETE FROM auth_role WHERE id = #{id}
    </delete>

</mapper>